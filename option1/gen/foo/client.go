// Code generated by goa v3.4.0, DO NOT EDIT.
//
// foo client
//
// Command:
// $ goa gen experiments/goa-cors-override/option1/design

package foo

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "foo" service client.
type Client struct {
	Foo1Endpoint       goa.Endpoint
	Foo2Endpoint       goa.Endpoint
	Foo3Endpoint       goa.Endpoint
	FooOptionsEndpoint goa.Endpoint
}

// NewClient initializes a "foo" service client given the endpoints.
func NewClient(foo1, foo2, foo3, fooOptions goa.Endpoint) *Client {
	return &Client{
		Foo1Endpoint:       foo1,
		Foo2Endpoint:       foo2,
		Foo3Endpoint:       foo3,
		FooOptionsEndpoint: fooOptions,
	}
}

// Foo1 calls the "foo1" endpoint of the "foo" service.
func (c *Client) Foo1(ctx context.Context, p int) (res int, err error) {
	var ires interface{}
	ires, err = c.Foo1Endpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// Foo2 calls the "foo2" endpoint of the "foo" service.
func (c *Client) Foo2(ctx context.Context, p int) (res int, err error) {
	var ires interface{}
	ires, err = c.Foo2Endpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// Foo3 calls the "foo3" endpoint of the "foo" service.
func (c *Client) Foo3(ctx context.Context, p int) (res int, err error) {
	var ires interface{}
	ires, err = c.Foo3Endpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// FooOptions calls the "fooOptions" endpoint of the "foo" service.
func (c *Client) FooOptions(ctx context.Context) (err error) {
	_, err = c.FooOptionsEndpoint(ctx, nil)
	return
}
